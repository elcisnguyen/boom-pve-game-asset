# 此程序仅用于生成地图，不作为游戏程序使用
# T表示界外
# F表示界内（底层默认属性）
# O表示障碍物
# W表示砖墙
# B表示箱子
# S表示地刺
import json
from plats import Map

#=============
# test
#=============

g = [
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
]


f1 = [
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
]

info = {}
pos = [(8, 7), (3, 11), (13, 11), (3, 3), (13, 3)]
color = [127, 127, 127]
filename = 'maps\\test.json'
with open(filename, 'w') as f_obj:
	json.dump([g, f1, info, pos, color], f_obj)

#=============
# cemetary 04
#=============
''''''
g = [
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
]


f1 = [
	['T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ],
	['T' ,'F' ,'F' ,'F' ,'w1','w2','w3','o6','F' ,'o6','w3','w2','w1','F' ,'F' ,'F' ,'T' ],
	['T' ,'o1','o2','F' ,'b0','w3','w2','o3','F' ,'o3','w2','w3','b0','F' ,'o1','o1','T' ],
	['T' ,'w2','w3','o6','F' ,'o6','w3','F' ,'F ','F' ,'w3','o6','F' ,'o6','w2','w2','T' ],
	['T' ,'w1','b0','F' ,'F' ,'F' ,'b0','w1','w0','w1','b0','F' ,'F' ,'F' ,'b0','w1','T' ],
	['T' ,'F' ,'w3','o8','F' ,'o6','w3','w2','b0','w2','w3','o8','F' ,'o6','w2','F' ,'T' ],
	['T' ,'F' ,'o6','w2','b0','w3','w2','o6','F' ,'o6','w2','w3','b0','w3','o6','F' ,'T' ],
	['T' ,'F' ,'o3','w1','w0','w1','b0','F' ,'F' ,'F' ,'b0','w1','w0','w1','o3','F' ,'T' ],
	['T' ,'F' ,'o3','w2','b0','w3','w2','o8','F' ,'o6','w2','w3','b0','w3','o3','F' ,'T' ],
	['T' ,'F' ,'w2','o6','F' ,'o6','w2','w3','b0','w3','w2','o6','F' ,'o6','w2','F' ,'T' ],
	['T' ,'w1','b0','F' ,'F' ,'F' ,'b0','w1','w0','w1','b0','F' ,'F' ,'F' ,'b0','w1','T' ],
	['T' ,'w3','w2','o8','F' ,'o6','w2','F' ,'F ','F' ,'w2','o8','F' ,'o6','w2','w2','T' ],
	['T' ,'o1','o2','F' ,'b0','w2','w3','o6','F' ,'o6','w3','w2','b0','F' ,'o1','o1','T' ],
	['T' ,'F' ,'F' ,'F' ,'w1','w3','w2','o3','F' ,'o3','w2','w3','w1','F' ,'F' ,'F' ,'T' ],
	['T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ],
]

info = {
	'o1': [(Map.grid_len, int(Map.grid_len*3)), -2*Map.grid_len],
	'o2': [(Map.grid_len, int(Map.grid_len*3)), -2*Map.grid_len],
	'o3': [(Map.grid_len, int(Map.grid_len*3)), -2*Map.grid_len],
	'o6': [(0, 0), 0],
	'o8': [(Map.grid_len*3, int(Map.grid_len*3)), -2*Map.grid_len],
	'w0': [(Map.grid_len, int(Map.grid_len*50/40)), -10],
	'w1': [(Map.grid_len, int(Map.grid_len*50/40)), -10],
	'w2': [(Map.grid_len, int(Map.grid_len*50/40)), -10],
	'w3': [(Map.grid_len, int(Map.grid_len*50/40)), -10],
	'b0': [(Map.grid_len, int(Map.grid_len*51/40)), -11],
}

pos = [(3, 1), (13, 1), (3, 13), (1, 7), (15, 7), (8, 3), (8, 13)]
color = [113, 110, 53]

filename = 'maps\\cemetary04.json'
with open(filename, 'w') as f_obj:
	json.dump([g, f1, info, pos, color], f_obj)

'''

#=============
# cemetary 07
#=============
'''
g = [
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
]


f1 = [
	['T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ],
	['T' ,'F' ,'F' ,'s0','s0','s0','s0','F' ,'b0','F' ,'s0','s0','s0','s0','F' ,'F' ,'T' ],
	['T' ,'b0','o0','o1','o1','o1','o1','o0','F' ,'o0','o1','o1','o1','o2','o0','b0','T' ],
	['T' ,'F' ,'b0','w1','w0','F' ,'F' ,'o6','s0','o6','F' ,'F' ,'w1','w0','b0','F' ,'T' ],
	['T' ,'b0','o6','w0','o6','o6','F' ,'o3','s0','o3','F' ,'o6','o6','w1','o6','b0','T' ],
	['T' ,'F' ,'o3','w1','o4','o6','F' ,'o3','s0','o3','F' ,'o4','o6','w0','o3','F' ,'T' ],
	['T' ,'F' ,'o3','w0','o7','o6','F' ,'o3','F' ,'o3','F' ,'o7','o6','w1','o3','F' ,'T' ],
	['T' ,'b0','o0','o1','o1','o1','o2','s0','b0','s0','o1','o1','o1','o2','o0','b0','T' ],
	['T' ,'F' ,'b0','w0','w1','F' ,'F' ,'o6','F' ,'o6','F' ,'F' ,'w0','w1','b0','F' ,'T' ],
	['T' ,'b0','o6','w1','o6','o6','F' ,'o3','s0','o3','F' ,'o6','o6','w0','o6','b0','T' ],
	['T' ,'F' ,'o3','w0','o4','o6','F' ,'o3','s0','o3','F' ,'o4','o6','w1','o3','F' ,'T' ],
	['T' ,'b0','o3','w1','o7','o6','F' ,'o3','s0','o3','F' ,'o7','o6','w0','o3','b0','T' ],
	['T' ,'F' ,'o0','o1','o1','o1','o2','o0','F' ,'o0','o1','o1','o1','o2','o0','F' ,'T' ],
	['T' ,'b0','F' ,'s0','s0','s0','s0','F' ,'b0','F' ,'s0','s0','s0','s0','F' ,'b0','T' ],
	['T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ],
]

info = {
	'o0': [(Map.grid_len, int(Map.grid_len*3)), -2*Map.grid_len],
	'o1': [(Map.grid_len, int(Map.grid_len*3)), -2*Map.grid_len],
	'o2': [(Map.grid_len, int(Map.grid_len*3)), -2*Map.grid_len],
	'o3': [(Map.grid_len, int(Map.grid_len*3)), -2*Map.grid_len],
	'o4': [(Map.grid_len*2, int(Map.grid_len*100/40)), -60],
	'o5': [(Map.grid_len, int(Map.grid_len*3)), -2*Map.grid_len],
	'o6': [(0, 0), 0],
	'o7': [(Map.grid_len*2, int(Map.grid_len*55/40)), -15],
	'w0': [(Map.grid_len, int(Map.grid_len*50/40)), -10],
	'w1': [(Map.grid_len, int(Map.grid_len*50/40)), -10],
	's0': [(Map.grid_len, int(Map.grid_len*60/40)), -20],
	'b0': [(Map.grid_len, int(Map.grid_len*51/40)), -11],
}

pos = [(6, 6), (6, 11), (10, 6), (10, 11)]
color = [113, 110, 53]

filename = 'maps\\cemetary07.json'
with open(filename, 'w') as f_obj:
	json.dump([g, f1, info, pos, color], f_obj)
'''

#=============
# cemetary 09
#=============
'''
g = [
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
]


f1 = [
	['T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T' ] ,
	['T'  ,'o14','F'  ,'o14','w3' ,'o14','w2' ,'o13','F'  ,'o13','w2' ,'o14','w2' ,'o13','F'  ,'o14','T' ] ,
	['T'  ,'F'  ,'F'  ,'F'  ,'w0' ,'w1' ,'w0' ,'F'  ,'F'  ,'F'  ,'w0' ,'w1' ,'w0' ,'F'  ,'F'  ,'F'  ,'T' ] ,
	['T'  ,'o13','F'  ,'o0' ,'b0' ,'o13','b1' ,'o7' ,'o6' ,'b1' ,'o14','b0' ,'o0' ,'w0' ,'o14','s0' ,'T' ] ,
	['T'  ,'w2' ,'w1' ,'w3' ,'w2' ,'w3' ,'w2' ,'w3' ,'w2' ,'w3' ,'w2' ,'w3' ,'w2' ,'w1' ,'s0' ,'s0' ,'T' ] ,
	['T'  ,'o13','w0' ,'o13','w3' ,'o10','w2' ,'o7' ,'o6' ,'w2' ,'o10','w2' ,'o13','w0' ,'o14','o13','T' ] ,
	['T'  ,'w3' ,'w1' ,'b2' ,'w2' ,'w2' ,'w2' ,'w2' ,'w2' ,'w2' ,'w2' ,'w3' ,'b2' ,'w1' ,'s0' ,'s0' ,'T' ] ,
	['T'  ,'o14','F'  ,'o13','w3' ,'o6' ,'o6' ,'o6' ,'o6' ,'o6' ,'o6' ,'w2' ,'o13','F'  ,'o14','s0' ,'T' ] ,
	['T'  ,'F'  ,'F'  ,'F'  ,'w2' ,'o11','o12','o6' ,'o6' ,'o6' ,'o11','w3' ,'F'  ,'F'  ,'s0' ,'s0' ,'T' ] ,
	['T'  ,'o13','w0' ,'o13','w3' ,'w2' ,'w3' ,'w2' ,'w3' ,'w2' ,'w3' ,'w2' ,'o13','w0' ,'o13','s0' ,'T' ] ,
	['T'  ,'w3' ,'w1' ,'w0' ,'b0' ,'o10','b0' ,'o7' ,'o6' ,'b0' ,'o10','b0' ,'w0' ,'w1' ,'s0' ,'s0' ,'T' ] ,
	['T'  ,'o14','w0' ,'o0' ,'w2' ,'w3' ,'w2' ,'w3' ,'w2' ,'w3' ,'w2' ,'w3' ,'o0' ,'w0' ,'o14','o13','T' ] ,
	['T'  ,'F'  ,'F'  ,'F'  ,'w2' ,'o13','b1' ,'o5' ,'o5' ,'F'  ,'o13','w2' ,'w3' ,'w1' ,'F'  ,'F'  ,'T' ] ,
	['T'  ,'o14','F'  ,'o13','w3' ,'o14','w2' ,'w3' ,'F'  ,'F'  ,'o14','w3' ,'s0' ,'w0' ,'o14','F'  ,'T' ] ,
	['T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T' ] ,
]

info = {
	'o0': [(Map.grid_len, int(Map.grid_len*3)), -2*Map.grid_len],
	'o5': [(Map.grid_len, int(Map.grid_len*3)), -2*Map.grid_len],
	'o6': [(0, 0), 0],
	'o7': [(Map.grid_len*2, int(Map.grid_len*55/40)), -15],
	'o10':[(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'o11':[(Map.grid_len, int(Map.grid_len*3)), -2*Map.grid_len],
	'o12':[(Map.grid_len*4, int(Map.grid_len*4)), -3*Map.grid_len],
	'o13':[(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'o14':[(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'w0': [(Map.grid_len, int(Map.grid_len*50/40)), -10],
	'w1': [(Map.grid_len, int(Map.grid_len*50/40)), -10],
	'w2': [(Map.grid_len, int(Map.grid_len*50/40)), -10],
	'w3': [(Map.grid_len, int(Map.grid_len*50/40)), -10],
	's0': [(Map.grid_len, int(Map.grid_len*60/40)), -20],
	'b0': [(Map.grid_len, int(Map.grid_len*51/40)), -11],
	'b1': [(Map.grid_len, int(Map.grid_len*51/40)), -11],
	'b2': [(Map.grid_len, int(Map.grid_len*51/40)), -11],
}

pos = [(2, 1), (14, 1), (2, 7), (2, 13), (15, 13), (8, 1), (8, 13), (13, 8)]
color = [113, 110, 53]

filename = 'maps\\cemetary09.json'
with open(filename, 'w') as f_obj:
	json.dump([g, f1, info, pos, color], f_obj)
'''

#=============
# sea 18
#=============
'''
g = [
	['T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ],
	['T' ,'g1','g2','g1','g2','g1','g2','g1','g2','g1','g2','g1','g2','g1','g2','g1','T' ],
	['T' ,'g2','F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'g2','T' ],
	['T' ,'g1','F' ,'r3','r6','r6','r6','r6','r6','r6','r6','r6','r6','r2','F' ,'g1','T' ],
	['T' ,'g2','F' ,'r7','F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'r5','F' ,'g2','T' ],
	['T' ,'g1','F' ,'r7','F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'r5','F' ,'g1','T' ],
	['T' ,'g2','F' ,'r7','F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'r5','F' ,'g2','T' ],
	['T' ,'g1','F' ,'r7','F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'r5','F' ,'g1','T' ],
	['T' ,'g2','F' ,'r7','F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'r5','F' ,'g2','T' ],
	['T' ,'g1','F' ,'r7','F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'r5','F' ,'g1','T' ],
	['T' ,'g2','F' ,'r7','F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'r5','F' ,'g2','T' ],
	['T' ,'g1','F' ,'r1','r4','r4','r4','r4','r4','r4','r4','r4','r4','r9','F' ,'g1','T' ],
	['T' ,'g2','F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'r1','F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'g2','T' ],
	['T' ,'g1','g2','g1','g2','g1','g2','g1','g2','g1','g2','g1','g2','g1','g2','g1','T' ],
	['T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ],
]

f1 = [
	['T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T' ],
	['T'  ,'F'  ,'F'  ,'F'  ,'F'  ,'o8' ,'F'  ,'F'  ,'F'  ,'F'  ,'F'  ,'F'  ,'F'  ,'F'  ,'F'  ,'o2' ,'T' ],
	['T'  ,'F'  ,'o13','o4' ,'o4' ,'o4' ,'o4' ,'o4' ,'o4' ,'o4' ,'o4' ,'o4' ,'o4' ,'o4' ,'o16','F'  ,'T' ],
	['T'  ,'F'  ,'o17','F'  ,'b1' ,'F'  ,'b2' ,'F'  ,'b1' ,'F'  ,'b2' ,'F'  ,'b1' ,'F'  ,'o18','F'  ,'T' ],
	['T'  ,'o14','o17','b2' ,'o21','b1' ,'o22','b2' ,'o22','b1' ,'o22','b2' ,'o21','b2' ,'o18','F'  ,'T' ],
	['T'  ,'F'  ,'o17','F'  ,'b2' ,'F'  ,'b1' ,'F'  ,'b2' ,'F'  ,'b1' ,'F'  ,'b1' ,'F'  ,'o18','F'  ,'T' ],
	['T'  ,'F'  ,'o17','b1' ,'o22','b2' ,'o22','b1' ,'o22','b2' ,'o22','b1' ,'o22','b1' ,'o18','F'  ,'T' ],
	['T'  ,'F'  ,'o17','F'  ,'b1' ,'F'  ,'b2' ,'F'  ,'b1' ,'F'  ,'b2' ,'F'  ,'b2' ,'F'  ,'o18','F'  ,'T' ],
	['T'  ,'o1' ,'o17','b2' ,'o22','b1' ,'o22','b2' ,'o22','b1' ,'o22','b2' ,'o22','b2' ,'o18','F'  ,'T' ],
	['T'  ,'F'  ,'o17','F'  ,'b2' ,'F'  ,'b1' ,'F'  ,'b2' ,'F'  ,'b1' ,'F'  ,'b1' ,'F'  ,'o18','o15','T' ],
	['T'  ,'F'  ,'o17','b1' ,'o21','b2' ,'o22','b1' ,'o22','b2' ,'o22','b1' ,'o21','b1' ,'o18','F'  ,'T' ],
	['T'  ,'F'  ,'o17','F'  ,'b2' ,'F'  ,'b1' ,'F'  ,'b2' ,'F'  ,'b1' ,'F'  ,'b2' ,'F'  ,'o18','F'  ,'T' ],
	['T'  ,'F'  ,'o19','o0' ,'o0' ,'o0' ,'o0' ,'o0' ,'o0' ,'o0' ,'o0' ,'o0' ,'o0' ,'o0' ,'o20','F'  ,'T' ],
	['T'  ,'F'  ,'F'  ,'F'  ,'o7' ,'F'  ,'F'  ,'F'  ,'F'  ,'F'  ,'F'  ,'F'  ,'F'  ,'F'  ,'F'  ,'F'  ,'T' ],
	['T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T'  ,'T' ],
]

info = {
	'o0': [(Map.grid_len, int(Map.grid_len)), 0],
	'o1': [(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'o2': [(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'o3': [(Map.grid_len*2, int(Map.grid_len*2)), -Map.grid_len],
	'o4': [(Map.grid_len, int(Map.grid_len)), 0],
	'o5': [(Map.grid_len*2, int(Map.grid_len*3)), -2*Map.grid_len],
	'o6': [(Map.grid_len*2, int(Map.grid_len*3)), -2*Map.grid_len],
	'o7': [(Map.grid_len*2, int(Map.grid_len*3)), -2*Map.grid_len],
	'o8': [(Map.grid_len*3, int(Map.grid_len*2)), -Map.grid_len],
	'o9': [(0, 0), 0],
	'o13':[(Map.grid_len, int(Map.grid_len)), 0],
	'o14':[(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'o15':[(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'o16':[(Map.grid_len, int(Map.grid_len)), 0],
	'o17':[(Map.grid_len, int(Map.grid_len)), 0],
	'o18':[(Map.grid_len, int(Map.grid_len)), 0],
	'o19':[(Map.grid_len, int(Map.grid_len)), 0],
	'o20':[(Map.grid_len, int(Map.grid_len)), 0],
	'o21':[(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'o22':[(Map.grid_len, int(Map.grid_len*50/40)), -10],
	'b1': [(Map.grid_len, int(Map.grid_len*50/40)), -10],
	'b2': [(Map.grid_len, int(Map.grid_len*50/40)), -10],
}

pos = [(3, 3), (3, 11), (13, 3), (13, 11)]
color = [85, 180, 0]

filename = 'maps\\sea18.json'
with open(filename, 'w') as f_obj:
	json.dump([g, f1, info, pos, color], f_obj)
'''


'''
#=============
# sea 13
#=============
g = [
	['T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ],
	['T' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'T' ],
	['T' ,'F' ,'F' ,'F' ,'F' ,'F' ,'r3','F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'r3','F' ,'T' ],
	['T' ,'g1','g2','g1','g2','g1','r7','g1','g2','g1','g2','g1','g2','g1','r7','g1','T' ],
	['T' ,'F' ,'F' ,'F' ,'F' ,'F' ,'r1','F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'r1','F' ,'T' ],
	['T' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'T' ],
	['T' ,'F' ,'F' ,'F' ,'r3','F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'r3','F' ,'F' ,'F' ,'F' ,'T' ],
	['T' ,'g1','g2','g1','r7','g1','g2','g1','g2','g1','g2','r7','g2','g1','g2','g1','T' ],
	['T' ,'F' ,'F' ,'F' ,'r1','F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'r1','F' ,'F' ,'F' ,'F' ,'T' ],
	['T' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'T' ],
	['T' ,'F' ,'r3','F' ,'F' ,'F' ,'F' ,'F' ,'r3','F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'T' ],
	['T' ,'g1','r7','g1','g2','g1','g2','g1','r7','g1','g2','g1','g2','g1','g2','g1','T' ],
	['T' ,'F' ,'r1','F' ,'F' ,'F' ,'F' ,'F' ,'r1','F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'T' ],
	['T' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'F' ,'T' ],
	['T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ],
]

f1 = [
	['T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ],
	['T' ,'F' ,'F' ,'F' ,'F' ,'w0','w1','w0','w1','w1','w0','w1','w0','w1','w0','w0','T' ],
	['T' ,'o0','o0','o0','o0','o0','F' ,'o0','o0','o0','o0','o0','o0','o0','F' ,'o0','T' ],
	['T' ,'F' ,'o1','o2','F' ,'o9','b0','o9','o3','T' ,'o3','T' ,'F' ,'o9','b0','o9','T' ],
	['T' ,'o4','o4','o4','o4','o4','F' ,'o4','o4','o4','o4','o4','o4','o4','F' ,'o4','T' ],
	['T' ,'w0','w1','w0','w1','w0','w1','w1','w0','F' ,'F' ,'F' ,'F' ,'w0','w1','w0','T' ],
	['T' ,'o0','o0','o0','F' ,'o0','o0','o0','o0','o0','o0','F' ,'o0','o0','o0','o0','T' ],
	['T' ,'o5','T' ,'o9','b0','o9','T' ,'o6','T' ,'T' ,'o9','b0','o9','o7','T' ,'F' ,'T' ],
	['T' ,'o4','o4','o4','F' ,'o4','o4','o4','o4','o4','o4','F' ,'o4','o4','o4','o4','T' ],
	['T' ,'w1','w0','w1','w0','F' ,'F' ,'F' ,'F' ,'w0','w1','w1','w0','w1','w0','w1','T' ],
	['T' ,'o0','F' ,'o0','o0','o0','o0','o0','F' ,'o0','o0','o0','o0','o0','o0','o0','T' ],
	['T' ,'o9','b0','o9','o1','T' ,'o2','o9','b0','o9','T' ,'o8','T' ,'T' ,'T' ,'T' ,'T' ],
	['T' ,'o4','F' ,'o4','o4','o4','o4','o4','F' ,'o4','o4','o4','o4','o4','o4','o4','T' ],
	['T' ,'w1','w1','w0','w0','w1','w1','w0','w0','w1','w0','w0','F' ,'F' ,'F' ,'F' ,'T' ],
	['T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ],
]

info = {
	'o0': [(Map.grid_len, int(Map.grid_len)), 0],
	'o1': [(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'o2': [(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'o3': [(Map.grid_len*2, int(Map.grid_len*2)), -Map.grid_len],
	'o4': [(Map.grid_len, int(Map.grid_len)), 0],
	'o5': [(Map.grid_len*2, int(Map.grid_len*3)), -2*Map.grid_len],
	'o6': [(Map.grid_len*2, int(Map.grid_len*3)), -2*Map.grid_len],
	'o7': [(Map.grid_len*2, int(Map.grid_len*3)), -2*Map.grid_len],
	'o8': [(Map.grid_len*3, int(Map.grid_len*2)), -Map.grid_len],
	'o9': [(0, 0), 0],
	'w0': [(Map.grid_len, int(Map.grid_len*53/40)), -13],
	'w1': [(Map.grid_len, int(Map.grid_len*53/40)), -13],
	'b0': [(Map.grid_len, int(Map.grid_len*48/40)), -8],
}

pos = [(3, 1), (10, 5), (6, 9), (13, 13)]
color = [85, 180, 0]

filename = 'maps\\sea13.json'
with open(filename, 'w') as f_obj:
	json.dump([g, f1, info, pos, color], f_obj)
'''


#=============
# pirate 00
#=============

'''
g = [
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
]

f1 = [
	['T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ],
	['T' ,'o2','F' ,'F' ,'o0','w1','o2','F' ,'F' ,'F' ,'o2','w1','o0','F' ,'F' ,'o2','T' ],
	['T' ,'F' ,'F' ,'w1','b0','w1','w1','o7','F' ,'o7','w1','w1','b0','w1','F' ,'F' ,'T' ],
	['T' ,'o4','w1','o0','w1','o0','w1','w1','w1','w1','w1','o0','w1','o0','w1','o4','T' ],
	['T' ,'w1','w1','w1','o0','b0','o0','w1','o0','w1','o0','b0','o0','F' ,'w1','w1','T' ],
	['T' ,'o2','w1','o3','w1','w1','w1','o5','o6','o6','w1','w1','w1','o3','b0','o2','T' ],
	['T' ,'F' ,'F' ,'w1','w1','o0','w1','w1','w1','w1','w1','o0','w1','w1','F' ,'F' ,'T' ],
	['T' ,'F' ,'o4','b0','o0','b0','o0','b0','o0','b0','o0','b0','o0','b0','o4','F' ,'T' ],
	['T' ,'F' ,'b0','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','b0','F' ,'T' ],
	['T' ,'o2','b0','o3','w1','o0','w1','o5','o6','o6','w1','o0','w1','o3','b0','o2','T' ],
	['T' ,'w1','w1','w1','o0','b0','o0','w1','w1','w1','o0','b0','o0','w1','w1','w1','T' ],
	['T' ,'o4','o0','w1','w1','w1','w1','w1','o0','w1','w1','w1','w1','w1','o0','o4','T' ],
	['T' ,'F' ,'F' ,'w1','o1','b0','o2','b0','o0','b0','o2','b0','o1','w1','F' ,'F' ,'T' ],
	['T' ,'o2','F' ,'F' ,'o0','w1','F' ,'F' ,'F' ,'F' ,'F' ,'w1','o0','F' ,'F' ,'o2','T' ],
	['T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ],
]

info = {
	'o0': [(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'o1': [(Map.grid_len, int(Map.grid_len*74/41)), -34],
	'o2': [(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'o3': [(Map.grid_len, int(Map.grid_len*3)), -2*Map.grid_len],
	'o4': [(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'o5': [(Map.grid_len*3, int(Map.grid_len*4)), -3*Map.grid_len],
	'o6': [(0, 0), 0],
	'o7': [(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'w1': [(Map.grid_len, int(Map.grid_len*48/40)), -8],
	'b0': [(Map.grid_len, int(Map.grid_len*48/40)), -8],
}

pos = [(2, 1), (14, 1), (2, 13), (14, 13), (1, 7), (15, 7), (8, 1), (8, 13)]
color = [186, 136, 32]

filename = 'maps\\pirate00.json'
with open(filename, 'w') as f_obj:
	json.dump([g, f1, info, pos, color], f_obj)
'''

#=============
# pirate 10
#=============
'''

g = [
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
]

f1 = [
	['T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T'],
	['T', 'F', 'F', 'F', 'w1','w1','w1','F', 'F', 'F', 'w1','w1','w1','F', 'F', 'F', 'T'],
	['T', 'o4','F', 'o4','b0','o4','b0','o4','F', 'o4','b0','o4','b0','o4','F', 'o4','T'],
	['T', 'w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','T'],
	['T', 'o0','o0','b0','o0','o0','o0','b0','o0','b0','o0','o0','o0','b0','o0','o0','T'],
	['T', 'w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','T'],
	['T', 'o2','F', 'o2','b0','o2','b0','o2','b0','o2','b0','o2','b0','o2','F', 'o2','T'],
	['T', 'F', 'F', 'w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','F', 'F', 'T'],
	['T', 'o2','F', 'o2','b0','o2','b0','o2','b0','o2','b0','o2','b0','o2','F', 'o2','T'],
	['T', 'w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','T'],
	['T', 'o0','o0','b0','o0','o0','o0','b0','o0','b0','o0','o0','o0','b0','o0','o0','T'],
	['T', 'w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','w1','T'],
	['T', 'o4','F', 'o4','b0','o4','b0','o4','F', 'o4','b0','o4','b0','o4','F', 'o4','T'],
	['T', 'F', 'F', 'F', 'w1','w1','w1','F', 'F', 'F', 'w1','w1','w1','F', 'F', 'F', 'T'],
	['T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T'],
]

info = {
	'o0': [(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'o1': [(Map.grid_len, int(Map.grid_len*74/41)), -34],
	'o2': [(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'o3': [(Map.grid_len, int(Map.grid_len*3)), -2*Map.grid_len],
	'o4': [(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'o5': [(Map.grid_len*3, int(Map.grid_len*4)), -3*Map.grid_len],
	'w1': [(Map.grid_len, int(Map.grid_len*48/40)), -8],
	'b0': [(Map.grid_len, int(Map.grid_len*48/40)), -8],
}
pos = [(2, 1), (8, 1), (14, 1), (2, 7), (14, 7), (2, 13), (8, 13), (14, 13)]
color = [186, 136, 32]

filename = 'maps\\pirate10.json'
with open(filename, 'w') as f_obj:
	json.dump([g, f1, info, pos, color], f_obj)


'''



#=============
# pirate 14
#=============
'''
g = [
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
]

f1 = [
	['T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ],
	['T' ,'w1','w1','w1','w1','F' ,'F' ,'F' ,'w1','F' ,'F' ,'F' ,'w1','w1','w1','w1','T' ],
	['T' ,'w1','o4','w1','F' ,'b0','b0','b0','F' ,'b0','b0','b0','F' ,'w1','o4','w1','T' ],
	['T' ,'w1','w1','F' ,'b0','F' ,'w1','F' ,'b0','F' ,'w1','F' ,'b0','F' ,'w1','w1','T' ],
	['T' ,'w1','F' ,'b0','F' ,'w1','w1','w1','w1','w1','w1','w1','F' ,'b0','F' ,'w1','T' ],
	['T' ,'w1','F' ,'b0','w1','w1','w1','w1','w1','w1','w1','w1','w1','b0','F' ,'w1','T' ],
	['T' ,'w1','F' ,'b0','F' ,'w1','w1','w1','w1','w1','w1','w1','F' ,'b0','F' ,'w1','T' ],
	['T' ,'w1','F' ,'b0','w1','w1','w1','o5','o6','o6','w1','w1','w1','b0','F' ,'w1','T' ],
	['T' ,'w1','w1','F' ,'b0','F' ,'w1','w1','w1','w1','w1','F' ,'b0','F' ,'w1','w1','T' ],
	['T' ,'w1','w1','w1','F' ,'b0','w1','w1','w1','w1','w1','b0','F' ,'w1','w1','w1','T' ],
	['T' ,'w1','w1','w1','w1','F' ,'b0','F' ,'w1','F' ,'b0','F' ,'w1','w1','w1','w1','T' ],
	['T' ,'w1','w1','F' ,'w1','w1','F' ,'b0','b0','b0','F' ,'w1','w1','F' ,'w1','w1','T' ],
	['T' ,'w1','o4','F' ,'w1','w1','w1','F' ,'F' ,'F' ,'w1','w1','w1','F' ,'o4','w1','T' ],
	['T' ,'w1','F' ,'F' ,'w1','w1','w1','w1','w1','w1','w1','w1','w1','F' ,'F' ,'w1','T' ],
	['T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ,'T' ],
]

info = {
	'o4': [(Map.grid_len, int(Map.grid_len*2)), -Map.grid_len],
	'o5': [(Map.grid_len*3, int(Map.grid_len*4)), -3*Map.grid_len],
	'o6': [(0, 0), 0],
	'w1': [(Map.grid_len, int(Map.grid_len*48/40)), -8],
	'b0': [(Map.grid_len, int(Map.grid_len*48/40)), -8],
}

pos = [(2, 6), (14, 6), (2, 13), (14, 13), (5, 1), (11, 1), (7, 12)]
color = [186, 136, 32]

filename = 'maps\\pirate14.json'
with open(filename, 'w') as f_obj:
	json.dump([g, f1, info, pos, color], f_obj)
'''










#=============
# 最初版地图
#=============
'''
g = [
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
	['T','F','F','F','F','F','F','F','S','S','S','S','F','S','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','S','S','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','X','X','F','X','F','F','S','S','S','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','X','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','S','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','S','S','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
]
f1 = [
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
	['T','F','F','F','F','F','F','F','F','F','F','F','F','F','F','F','T'],
	['T','F','F','O','O','O','O','O','B','B','B','B','F','B','F','F','T'],
	['T','F','F','O','F','F','F','O','O','O','F','F','F','F','F','F','T'],
	['T','F','O','O','F','O','B','F','F','O','B','B','B','F','F','F','T'],
	['T','F','O','F','B','F','F','F','F','F','F','F','F','F','W','F','T'],
	['T','F','O','F','F','B','B','F','O','O','B','B','B','F','F','F','T'],
	['T','F','O','O','O','F','O','F','O','F','F','F','F','F','F','F','T'],
	['T','F','F','F','O','F','F','F','O','F','F','F','F','F','W','F','T'],
	['T','F','F','F','O','O','O','O','O','B','B','B','B','F','F','F','T'],
	['T','F','F','F','F','F','F','F','F','B','B','B','F','F','F','W','T'],
	['T','F','F','F','W','F','W','W','B','F','F','F','F','F','F','F','T'],
	['T','F','F','F','F','F','F','W','W','W','F','F','F','F','B','F','T'],
	['T','F','F','F','F','F','F','F','W','W','F','F','F','F','F','F','T'],
	['T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T','T'],
]

filename = 'maps\\m1_g.json'
with open(filename, 'w') as f_obj:
	json.dump(g, f_obj)

filename = 'maps\\m1_f1.json'
with open(filename, 'w') as f_obj:
	json.dump(f1, f_obj)

''''''